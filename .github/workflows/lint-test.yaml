name: "Lint and Test"

on:
  push:
    paths-ignore:
      - "**/README.md"
      - "docs/**"
      - "**/CODEOWNERS"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build and lint
        run: |
          npm install
          npm build
          npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build and test
        run: |
          npm install
          npm build
          npm test
      - name: Generate code coverage report
        run: |
          npm run test-report:gen
      - name: Upload artifact - code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage/index.html
          retention-days: 1

  coverage-badge:
    name: Update coverage badge
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Download artifact - code coverage report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - name: Parse coverage
        id: parse-coverage
        run: |
          echo "::set-output name=COVERAGE::Coverage-$(grep -m1 'strong' index.html | awk -F '>' '{print $2}' | awk '{print $1}')"
      - name: Replace badge
        run: |
          echo ${{ steps.parse-coverage.outputs.COVERAGE }}
          sed -i '2s#Coverage.*%#${{ steps.parse-coverage.outputs.COVERAGE }}#' README.md
      - name: Check for file changes
        id: check-changes
        run: |
          echo "::set-output name=CHANGES::$(git diff --quiet README.md || echo 'yes')"
      - name: Commit and push
        if: ${{ steps.check-changes.outputs.CHANGES }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md
          git commit -m "Update coverage badge"
          git push
